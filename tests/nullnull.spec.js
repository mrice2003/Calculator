// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver');
const assert = require('assert');
const fs = require('fs');

describe('null + null', function() {
  this.timeout(30000);
  let driver;
  let vars;

  if (!fs.existsSync('./screenshots')) {
    fs.mkdirSync('./screenshots');
  }

  beforeEach(async function() {
    const browser = process.env.BROWSER || 'chrome';
    if (browser === 'chrome') {
      const chrome = require('selenium-webdriver/chrome');
      const options = new chrome.Options();
      options.addArguments('--headless', '--no-sandbox', '--disable-dev-shm-usage');
      driver = await new Builder().forBrowser('chrome').setChromeOptions(options).build();
    } else if (browser === 'firefox') {
      const firefox = require('selenium-webdriver/firefox');
      const options = new firefox.Options();
      options.addArguments('--headless');
      driver = await new Builder().forBrowser('firefox').setFirefoxOptions(options).build();
    }
    vars = {};
  });

  afterEach(async function() {
    if (driver) {
      const filename = this.currentTest.fullTitle()
        .replace(/['"]+/g, '')
        .replace(/[^a-z0-9]/gi, '_')
        .toLowerCase();
      const encodedString = await driver.takeScreenshot();
      await fs.writeFileSync(`./screenshots/${filename}.png`, encodedString, 'base64');
      await driver.quit();
    }
  });

  it('null + null', async function() {
    await driver.get("http://localhost:8000/");
    await driver.manage().window().setRect({ width: 1050, height: 652 });
    await driver.findElement(By.id("num1")).click();
    await driver.findElement(By.id("num2")).click();
    await driver.findElement(By.css("button:nth-child(1)")).click();
    await driver.findElement(By.css("button:nth-child(2)")).click();

    const filename = 'null_null';
    const encodedString = await driver.takeScreenshot();
    await fs.writeFileSync(`./screenshots/${filename}.png`, encodedString, 'base64');
  });
});
